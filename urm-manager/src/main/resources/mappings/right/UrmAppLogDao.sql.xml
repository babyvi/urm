<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panly.urm.manager.right.dao.UrmAppLogDao">

    <resultMap type="com.panly.urm.manager.right.entity.UrmAppLog" id="urmAppLogResultMap">
		<result property="appLogId" column="APP_LOG_ID"  />
		<result property="appLogReqId" column="APP_LOG_REQ_ID"  />
		<result property="appId" column="APP_ID"  />
		<result property="appName" column="APP_NAME"  />
		<result property="appIp" column="APP_IP"  />
		<result property="logLevel" column="LOG_LEVEL"  />
		<result property="logType" column="LOG_TYPE"  />
		<result property="logContent" column="LOG_CONTENT"  />
		<result property="createTime" column="CREATE_TIME"  />
	</resultMap>
	
	<sql id="table_columns">
		APP_LOG_ID,
		APP_LOG_REQ_ID,
		APP_ID,
		APP_NAME,
		APP_IP,
		LOG_LEVEL,
		LOG_TYPE,
		LOG_CONTENT,
		CREATE_TIME
    </sql>
	<sql id="entity_properties">
		#{appLogId},
		#{appLogReqId},
		#{appId},
		#{appName},
		#{appIp},
		#{logLevel},
		#{logType},
		#{logContent},
		#{createTime}
	</sql>

    <!-- columnName like concat('%',#columnName#,'%') -->
    <sql id="page_where">
        <trim prefix="where" prefixOverrides="and | or ">
				<if test="appLogId != null ">and APP_LOG_ID = #{appLogId}</if>
				<if test="appLogReqId != null and appLogReqId != ''">and APP_LOG_REQ_ID = #{appLogReqId}</if>
				<if test="appId != null ">and APP_ID = #{appId}</if>
				<if test="appName != null and appName != ''">and APP_NAME = #{appName}</if>
				<if test="appIp != null and appIp != ''">and APP_IP = #{appIp}</if>
				<if test="logLevel != null ">and LOG_LEVEL = #{logLevel}</if>
				<if test="logType != null and logType != ''">and LOG_TYPE = #{logType}</if>
				<if test="logContent != null and logContent != ''">and LOG_CONTENT = #{logContent}</if>
				<if test="createTime != null ">and CREATE_TIME = #{createTime}</if>
        </trim>
    </sql>

	<insert id="insert" parameterType="com.panly.urm.manager.right.entity.UrmAppLog" >
		insert into urm_app_log( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>

    <insert id="insertSelective" parameterType="com.panly.urm.manager.right.entity.UrmAppLog">
        insert into urm_app_log
        <trim prefix="(" suffix=")" suffixOverrides="," >
				<if test="appLogId != null ">APP_LOG_ID,</if>
				<if test="appLogReqId != null and appLogReqId != ''">APP_LOG_REQ_ID,</if>
				<if test="appId != null ">APP_ID,</if>
				<if test="appName != null and appName != ''">APP_NAME,</if>
				<if test="appIp != null and appIp != ''">APP_IP,</if>
				<if test="logLevel != null ">LOG_LEVEL,</if>
				<if test="logType != null and logType != ''">LOG_TYPE,</if>
				<if test="logContent != null and logContent != ''">LOG_CONTENT,</if>
				<if test="createTime != null ">CREATE_TIME,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
				<if test="appLogId != null ">#{appLogId},</if>
				<if test="appLogReqId != null and appLogReqId != ''">#{appLogReqId},</if>
				<if test="appId != null ">#{appId},</if>
				<if test="appName != null and appName != ''">#{appName},</if>
				<if test="appIp != null and appIp != ''">#{appIp},</if>
				<if test="logLevel != null ">#{logLevel},</if>
				<if test="logType != null and logType != ''">#{logType},</if>
				<if test="logContent != null and logContent != ''">#{logContent},</if>
				<if test="createTime != null ">#{createTime},</if>
        </trim>
	</insert>


	<delete id="delete" parameterType="com.panly.urm.manager.right.entity.UrmAppLog">
		delete from urm_app_log
        <include refid="page_where" />
	</delete>

	<delete id="deleteByPrimaryKey">
		delete from urm_app_log
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="1==1">and APP_LOG_ID = #{appLogId}</if>
        </trim>
	</delete>


	<update id="updateByPrimaryKey" parameterType="com.panly.urm.manager.right.entity.UrmAppLog">
		update urm_app_log 
		<trim prefix="set" suffixOverrides=",">
				<if test="appLogReqId != null and appLogReqId != ''">APP_LOG_REQ_ID = #{appLogReqId},</if>
				<if test="appId != null ">APP_ID = #{appId},</if>
				<if test="appName != null and appName != ''">APP_NAME = #{appName},</if>
				<if test="appIp != null and appIp != ''">APP_IP = #{appIp},</if>
				<if test="logLevel != null ">LOG_LEVEL = #{logLevel},</if>
				<if test="logType != null and logType != ''">LOG_TYPE = #{logType},</if>
				<if test="logContent != null and logContent != ''">LOG_CONTENT = #{logContent},</if>
				<if test="createTime != null ">CREATE_TIME = #{createTime},</if>
		</trim>
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="1==1">and APP_LOG_ID = #{appLogId}</if>
        </trim>
	</update>

    <select id="findAll" resultMap="urmAppLogResultMap">
        select <include refid="table_columns" />
        from urm_app_log
    </select>

    <select id="find" resultMap="urmAppLogResultMap">
        select <include refid="table_columns" />
        from urm_app_log
        <include refid="page_where" />
	</select>

    <select id="getCount" resultType="int" >
        select count(*) from urm_app_log
        <include refid="page_where" />
    </select>


    <select id="getByPrimaryKey" resultMap="urmAppLogResultMap"  >
		select <include refid="table_columns" />
		from urm_app_log
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="1==1">and APP_LOG_ID = #{appLogId}</if>
        </trim>
	</select>
	
	<!-- other SQL -->
	 <select id="queryAppLog" resultMap="urmAppLogResultMap">
        select <include refid="table_columns" />
        from urm_app_log
        <trim prefix="where" prefixOverrides="and | or ">
			<if test="appLogReqId != null and appLogReqId != ''">and APP_LOG_REQ_ID = #{appLogReqId}</if>
			<if test="appId != null ">and APP_ID = #{appId}</if>
			<if test="appIp != null and appIp != ''">and APP_IP = #{appIp}</if>
			<if test="logLevel != null ">and LOG_LEVEL = #{logLevel}</if>
			<if test="logType != null and logType != ''">and LOG_TYPE = #{logType}</if>
			<if test="startCreateTime != null and startCreateTime != ''">and CREATE_TIME > #{startCreateTime}</if>
			<if test="endCreateTime != null and endCreateTime != ''"><![CDATA[ and CREATE_TIME < #{endCreateTime} ]]></if>
        </trim>
	</select>

</mapper>